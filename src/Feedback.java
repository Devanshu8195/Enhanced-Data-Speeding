import conn.plasmaCon;
import java.awt.event.KeyEvent;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.RowFilter;
import static javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import net.proteanit.sql.DbUtils;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Prital
 */
public class Feedback extends javax.swing.JFrame {

    /**
     * Creates new form Feedback
     */
    plasmaCon c;
    String LoginId,LoginName,LoginEmail="";
    DefaultTableModel dm;
    
    public Feedback() {
        initComponents();
        update_table();
        fillCombo();
    }
    
    public void update_table()
    {
        String select;
        
        c = new plasmaCon();
        try
        {
            c.st = c.con.createStatement();
            select = "select name,date,time,Observation from tbl_Observation";
            c.rs = c.st.executeQuery(select);
            tblMain.setModel(DbUtils.resultSetToTableModel(c.rs));
            dm = (DefaultTableModel) tblMain.getModel();
            c.rs.close();
            c.con.close();
        }catch(Exception e){}
    }

    public void fillCombo()
    {
        String select = "", scientistName = "";
        
        c = new plasmaCon();
        try
        {
            c.st = c.con.createStatement();
            select = "select fname from tbl_register";
            c.rs = c.st.executeQuery(select);

            while(c.rs.next())
            {
                cmbScientist.addItem(c.rs.getString("fname"));
            }
            c.rs.close();
            c.con.close();
        }catch(Exception e){}
        
    }
    
    public void filter(String fl)
    {
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(dm);
        tblMain.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(fl));
    }
            

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panMain = new javax.swing.JPanel();
        lblHeading = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMain = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        txtName = new javax.swing.JTextField();
        txtObservation1 = new javax.swing.JScrollPane();
        txtObservation = new javax.swing.JTextArea();
        txtDate = new javax.swing.JTextField();
        txtTime = new javax.swing.JTextField();
        panAddob = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAddobservation = new javax.swing.JTextArea();
        btnAdd = new javax.swing.JButton();
        lblLimit = new javax.swing.JLabel();
        panSearch = new javax.swing.JPanel();
        cmbScientist = new javax.swing.JComboBox();
        txtFilter = new javax.swing.JTextField();
        lblImage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        panMain.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblHeading.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        lblHeading.setForeground(new java.awt.Color(51, 255, 0));
        lblHeading.setText("Observartion");
        panMain.add(lblHeading, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 10, 150, 50));

        tblMain.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblMain.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMainMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblMain);

        panMain.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 670, 380));

        txtName.setEditable(false);

        txtObservation.setEditable(false);
        txtObservation.setColumns(20);
        txtObservation.setRows(5);
        txtObservation1.setViewportView(txtObservation);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtObservation1, javax.swing.GroupLayout.DEFAULT_SIZE, 469, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTime, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(txtObservation1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        panMain.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 140, 500, 310));

        panAddob.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add your observation", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12), new java.awt.Color(0, 153, 0))); // NOI18N

        jScrollPane2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        txtAddobservation.setColumns(20);
        txtAddobservation.setRows(5);
        txtAddobservation.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAddobservationKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAddobservationKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(txtAddobservation);

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panAddobLayout = new javax.swing.GroupLayout(panAddob);
        panAddob.setLayout(panAddobLayout);
        panAddobLayout.setHorizontalGroup(
            panAddobLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panAddobLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panAddobLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                    .addComponent(lblLimit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panAddobLayout.setVerticalGroup(
            panAddobLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panAddobLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(panAddobLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(btnAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblLimit)
                .addContainerGap())
        );

        panMain.add(panAddob, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 530, 670, 160));

        panSearch.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12), new java.awt.Color(0, 153, 0))); // NOI18N

        cmbScientist.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cmbScientist.setForeground(new java.awt.Color(0, 105, 105));
        cmbScientist.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "- - - - Select Scientist - - - -" }));
        cmbScientist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbScientistActionPerformed(evt);
            }
        });

        txtFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFilterActionPerformed(evt);
            }
        });
        txtFilter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFilterKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout panSearchLayout = new javax.swing.GroupLayout(panSearch);
        panSearch.setLayout(panSearchLayout);
        panSearchLayout.setHorizontalGroup(
            panSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panSearchLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cmbScientist, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );
        panSearchLayout.setVerticalGroup(
            panSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panSearchLayout.createSequentialGroup()
                .addGroup(panSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbScientist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 25, Short.MAX_VALUE))
        );

        panMain.add(panSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 460, 70));

        lblImage.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        lblImage.setForeground(new java.awt.Color(51, 255, 0));
        lblImage.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/plasma1.jpg"))); // NOI18N
        panMain.add(lblImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1360, 700));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void tblMainClick(String click)
    {
        try
        {
//            c.st = c.con.createStatement();
//            JOptionPane.showMessageDialog(null, "St create...");
//            String select = "select name,observation from tbl_observation where oid = "+Integer.parseInt(click)+"";
//            JOptionPane.showMessageDialog(null, "Query write...");
//            c.rs = c.st.executeQuery(select);
//            JOptionPane.showMessageDialog(null, "Query excecute...");
////            tblMain.setModel(DbUtils.resultSetToTableModel(c.rs));
//            if(c.rs.next())
//            {
//                while(c.rs.next())
//                {
//                    String name = c.rs.getString("name");
//                    txtName.setText(name);
//                    String observation = c.rs.getString("observation");
//                    txtObservation.append(""+observation);
//
//                }
//            }
//            c.con.close();
        }catch(Exception e){}
    }
    
    private void tblMainMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMainMouseClicked

        String select, name="", observation="", dt = "", tm = "";
        c = new plasmaCon();
        
        try
        {
//            JOptionPane.showMessageDialog(null, "try start");
            int row = tblMain.getSelectedRow();
            String click = (tblMain.getModel().getValueAt(row, 0).toString());

            txtName.setText(tblMain.getModel().getValueAt(row, 0).toString());
            txtDate.setText(tblMain.getModel().getValueAt(row, 1).toString());
            txtTime.setText(tblMain.getModel().getValueAt(row, 2).toString());
            txtObservation.setText(tblMain.getModel().getValueAt(row, 3).toString());
            /*
            
//            tblMainClick(click);

            c.st = c.con.createStatement();
            JOptionPane.showMessageDialog(null, "St create...click = "+click);
            select = "select name,observation,date,time from tbl_observation where oid = "+Integer.parseInt(click)+"";
            JOptionPane.showMessageDialog(null, "Query write...");
            c.rs = c.st.executeQuery(select);
            JOptionPane.showMessageDialog(null, "Query excecute...");
//            tblMain.setModel(DbUtils.resultSetToTableModel(c.rs));
            while(c.rs.next())
            {
                JOptionPane.showMessageDialog(null, "Data");
                name = c.rs.getString("name");
                observation = c.rs.getString("observation");
                dt = c.rs.getString("date");
                tm = c.rs.getString("time");
            }
            txtName.setText(name);
            txtObservation.setText(observation);
            txtDate.setText(dt);
            txtTime.setText(tm);
            c.con.close();
            
            */
//            JOptionPane.showMessageDialog(null, "Click = "+click);            
            
        }catch(Exception e){}
    }//GEN-LAST:event_tblMainMouseClicked

    public String getDateTime()
    {
        DateFormat df = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        Date dateobj = new Date();
        return df.format(dateobj);
    }
    
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed

        String sss = "";
        String ob = txtAddobservation.getText();
        String date1[] = new String[1],insert = "";
        c = new plasmaCon();
//        JOptionPane.showMessageDialog(null, "Hi1");

        
        if(!ob.equals(""))
        {
            sss = getDateTime();
            date1 = sss.split(" ");
            
            try
            {
//                JOptionPane.showMessageDialog(null, "Try Start...");
                int dialogResult = JOptionPane.showConfirmDialog(null, "Would You Like to Add your Observation??"); //,"Warning",dialogButton);
                if(dialogResult == JOptionPane.YES_OPTION)
                {
                    c.st = c.con.createStatement();
    //                JOptionPane.showMessageDialog(null, "Rid = "+LoginId+"\ndate = "+date1+"\nname = "+LoginName+"\nemail = "+LoginEmail+"\nob = "+ob);
                    insert = "insert into tbl_observation (Rid,Date,time,Name,Email_id,Observation) values ('"+LoginId+"','"+date1[0]+"','"+date1[1]+"','"+LoginName+"','"+LoginEmail+"','"+ob+"')";
                    c.st.executeUpdate(insert);
    //                JOptionPane.showMessageDialog(null, "observation added...");

                    c.con.close();
                    txtAddobservation.setText("");
                    limit();
                    update_table();
                
                }
            }catch(Exception e){}
        }
        else
        {
//            JOptionPane.showMessageDialog(null, "Hi");
//            date1 = String.valueOf(date.getDate()+"/"+date.getMonth()+"/"+date.getYear());
            JOptionPane.showMessageDialog(null, "You must write your observation...");
        }
    }//GEN-LAST:event_btnAddActionPerformed

    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        
        txtAddobservation.setLineWrap(true);
        txtObservation.setLineWrap(true);
        limit();
        c = new plasmaCon();
        
        try 
        {
//            JOptionPane.showMessageDialog(null, "window open");
            c.st = c.con.createStatement();
            String select = "select email_id from tbl_register where rid = "+Integer.parseInt(LoginId)+"";
//            JOptionPane.showMessageDialog(null, "Query Write...");
            c.rs = c.st.executeQuery(select);
//            JOptionPane.showMessageDialog(null, "Query Excecute...");

            
            while(c.rs.next())
            {
                LoginEmail = c.rs.getString("email_id");
            }
            c.rs.close();
            c.con.close();
        }catch(Exception e){}
    }//GEN-LAST:event_formWindowOpened

    public void limit()
    {
        String limit = txtAddobservation.getText();
        lblLimit.setText(""+limit.length()+"/65000");
    }
    
    private void txtAddobservationKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAddobservationKeyReleased

        limit();
    }//GEN-LAST:event_txtAddobservationKeyReleased

    private void txtAddobservationKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAddobservationKeyTyped

        char c = evt.getKeyChar();

        if(txtAddobservation.getText().length()>65000)
        {
            getToolkit().beep();
            evt.consume();
        }

    }//GEN-LAST:event_txtAddobservationKeyTyped

    private void cmbScientistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbScientistActionPerformed

        int index = cmbScientist.getSelectedIndex();
        String scientist = cmbScientist.getSelectedItem().toString();
        if(index==0)
        {
            filter("");
        }
        else
        {
            filter(scientist);
        }
    }//GEN-LAST:event_cmbScientistActionPerformed

    private void txtFilterKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFilterKeyReleased

        String filter = txtFilter.getText();
        filter(filter);
    }//GEN-LAST:event_txtFilterKeyReleased

    private void txtFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFilterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFilterActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Feedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Feedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Feedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Feedback.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Feedback().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JComboBox cmbScientist;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblHeading;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblLimit;
    private javax.swing.JPanel panAddob;
    private javax.swing.JPanel panMain;
    private javax.swing.JPanel panSearch;
    private javax.swing.JTable tblMain;
    private javax.swing.JTextArea txtAddobservation;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtFilter;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextArea txtObservation;
    private javax.swing.JScrollPane txtObservation1;
    private javax.swing.JTextField txtTime;
    // End of variables declaration//GEN-END:variables
}
